/*
* https://www.hackerrank.com/challenges/dijkstrashortreach
*/

import java.io.*;
import java.util.*;

public class Solution {

int V;
	public Solution(int V) {
		// TODO Auto-generated constructor stub
	

		// TODO Auto-generated constructor stub
		this.V = V;
	}
	
	private int minimumDistance(int dist[], boolean sptSet[]) {
		int min = Integer.MAX_VALUE;
		int minIndex = -1;
		for(int i = 0 ; i < V; i++) {
			if(!sptSet[i] && dist[i] < min) {
				min = dist[i];
				minIndex = i;
			}
		}
		return minIndex;
	}
	
	public void dijkstra(int graph[][], int src) {
		int dist[] = new int[V];
		boolean[] sptSet = new boolean[V];
		for(int i = 0 ; i < V ; i++) {
			dist[i] = Integer.MAX_VALUE;
			sptSet[i] = false;
			
		}
		dist[src] = 0;
		for(int i = 0 ; i < V; i++) {
			
			int u = minimumDistance(dist, sptSet);
				sptSet[u] = true;
			for(int v = 0 ; v < V; v++) {
				if(u != -1 && !sptSet[v] && graph[u][v] > 0 && dist[v] > dist[u] + graph[u][v]) {
					dist[v] = dist[u] + graph[u][v];
				}	
			}		
		}	
		printSolution(dist, V);
	}
	private void printSolution(int[] dist, int  V) {
		
		for(int i = 0 ; i < V; i++) {
			
			if(dist[i] == Integer.MAX_VALUE) {
				System.out.print("-1 ");
			}else if(dist[i] != 0) {
				System.out.print(dist[i] + " ");
			}
			
		}
	}

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner in = new Scanner(System.in);
		int T = in.nextInt();
	    	
		for(int i = 0 ; i < T; i++) {
			int numberOfVertices = in.nextInt();
			Solution g = new Solution(numberOfVertices);
			int edge = in.nextInt();
            int[][] graph = new int[numberOfVertices][numberOfVertices];
			for(int j = 0 ; j < edge; j++) {
				int u = in.nextInt();
                int v = in.nextInt();
                int w = in.nextInt();
                
                                if((graph[u - 1][v - 1] != 0 && graph[u - 1][v-1] > w) || graph[u - 1][v - 1] == 0) {
                    graph[u-1][v-1] = w;
                     graph[v - 1][u -1] = w;
                }
			}
            g.dijkstra(graph, in.nextInt() - 1);
            System.out.println();
		}
        
        
    }
}
